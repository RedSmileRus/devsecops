name: CI-CD (Yandex Cloud)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE: ${{ secrets.YC_REGISTRY_REPO }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Устанавливаем yc CLI через готовый экшн
      - name: Install YC CLI
        uses: yc-actions/yc-install@v1
        with:
          version: latest

      - name: Check yc binary
        run: yc --version

      - name: Configure YC with SA key
        env:
          YC_SA_KEY_JSON: ${{ secrets.YC_SA_KEY_JSON }}
          YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
          YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
        run: |
          echo "$YC_SA_KEY_JSON" > sa-key.json
          yc config set service-account-key sa-key.json
          yc config set cloud-id  "$YC_CLOUD_ID"
          yc config set folder-id "$YC_FOLDER_ID"
          yc config list

      - name: Docker login to Yandex CR (IAM token)
        run: |
          TOKEN=$(yc iam create-token)
          echo "$TOKEN" | docker login -u iam --password-stdin cr.yandex

      - name: Build & Push image
        run: |
          docker build \
            -t "$IMAGE:latest" \
            -t "$IMAGE:${{ github.sha }}" \
            .
          docker push "$IMAGE:latest"
          docker push "$IMAGE:${{ github.sha }}"

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            mkdir -p ~/site
            cat > ~/site/docker-compose.yml <<'YAML'
            services:
              web:
                image: ${IMAGE}:latest
                ports:
                  - "80:80"
                restart: unless-stopped
            YAML
            export IMAGE="${{ secrets.YC_REGISTRY_REPO }}"
            docker compose -f ~/site/docker-compose.yml pull
            docker compose -f ~/site/docker-compose.yml up -d
            docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Ports}}\t{{.Status}}'

      - name: Health check (curl)
        run: |
          curl -I --max-time 10 "http://${{ secrets.VM_HOST }}/" || exit 1
